# Load the shell dotfiles, and then some:
# * ~/.path can be used to extend `$PATH`.
# * ~/.extra can be used for other settings you donâ€™t want to commit.
for file in ~/.{bash_paths,bash_exports,bash_prompt,bash_aliases,bash_functions,bash_extra}; do
	[ -r "$file" ] && [ -f "$file" ] && source "$file";
done;
unset file;

# Autocorrect typos in path names when using `cd`
shopt -s cdspell;

# Enable some Bash 4 features when possible:
# * `autocd`, e.g. `**/qux` will enter `./foo/bar/baz/qux`
# * Recursive globbing, e.g. `echo **/*.txt`
for option in autocd globstar; do
	shopt -s "$option" 2> /dev/null;
done;

# Add tab completion for many Bash commands
#if which brew > /dev/null && [ -f "$(brew --prefix)/etc/bash_completion" ]; then
#	source "$(brew --prefix)/etc/bash_completion";
#elif [ -f /etc/bash_completion ]; then
#	source /etc/bash_completion;
#fi;

# Add tab completion for SSH hostnames based on ~/.ssh/config, ignoring wildcards
#[ -e "$HOME/.ssh/config" ] && complete -o "default" -o "nospace" -W "$(grep "^Host" ~/.ssh/config | grep -v "[?*]" | cut -d " " -f2- | tr ' ' '\n')" scp sftp ssh;

# Add node / nvm
if which brew > /dev/null; then
	export NVM_DIR=~/.nvm
	source $(brew --prefix nvm)/nvm.sh
fi;

# Add virtualenv
#if [ -f /usr/local/bin/virtualenvwrapper.sh ]; then
#	# set where virutal environments will live
#    export WORKON_HOME=$HOME/.virtualenvs
#    # ensure all new environments are isolated from the site-packages directory
#    export VIRTUALENVWRAPPER_VIRTUALENV_ARGS='--no-site-packages'
#    # use the same directory for virtualenvs as virtualenvwrapper
#    export PIP_VIRTUALENV_BASE=$WORKON_HOME
#    # makes pip detect an active virtualenv and install to it
#    export PIP_RESPECT_VIRTUALENV=true
#    
#	source /usr/local/bin/virtualenvwrapper.sh
#fi;
